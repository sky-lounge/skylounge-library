display-name: Cloud Foundry (Bosh)
description: |

documentation: |

hide-in-environments:
  - production

tags:
  - penetration-test
weight: 2
workflow-templates:
  - name: pull-request
    description: |
      Checks pull requests before merging. This workflow runs unit tests and GitHub Advanced Security [Dependency Review](https://docs.github.com/en/code-security/supply-chain-security/understanding-your-software-supply-chain/about-dependency-review) using a centralized configuration file.
    uri: sky-lounge/skylounge-library/blueprints/cloudfoundry/bosh/workflow-templates/pull-request.yml
    documentation: |
      ## Unit Test (unit-test)
      This job ensures unit tests pass before the pull request is merged. A skylounge-step to run unit tests must be configured. 

      ## Dependency Review (dependency-review)
      This job runs GitHub Advanced Security [Dependency Review](https://docs.github.com/en/code-security/supply-chain-security/understanding-your-software-supply-chain/about-dependency-review) using a centralized configuration file

      The job uses a centralized configuration file specificying the rules. This file should be stored in your organizations SkyLounge Library. Configuration options are documented in the action repository: https://github.com/actions/dependency-review-action#configuration-options. As per the option documentation, **the option names in external files use underscores instead of dashes**.

      In order to access the configuration file, you must generate a [Classic Personal Access Token](https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token#personal-access-tokens-classic) with the `repo` scope. _The action does not yet work with fine-grained access tokens._ Store the token as a GitHub Secret using the name `LIBRARY_TOKEN`.
    branch: main
    icon: fa-solid fa-code-pull-request
  - name: development
    description: # desc
    uri: sky-lounge/skylounge-library/blueprints/cloudfoundry/bosh/workflow-templates/development.yml
    documentation: # Docs
    branch: main
    icon: bi bi-code-slash
  - name: promote
    description: |
      Promote from development to production by updating `.github/production-version.txt` in the repository. This workflow is manually triggered.
    uri: sky-lounge/skylounge-library/blueprints/cloudfoundry/bosh/workflow-templates/promote.yml
    documentation: |
      ## Versioning semantics
      Deployed version state is tracked in the repository using two files: `.github/development-version.txt` and `.github/production-version.txt` for the development and production deployments respectively. Version values correspond to the commit SHA of the last change made in development that triggered the development workflow. This enables easy tracking of deployed features.

      The development version is set automatically in the development workflow after integration tests complete successfully. The single job in this workflow copies the development SHA to the production version file `.github/production-version.txt`. This triggers the execution of the production workflow to complete the deployment.

      ## Rollback
      Rollback can be completed by updating the `.github/production-version.txt` file to the SHA of the version you would like to roll back to. This will trigger the production workflow to complete the rollback.
    branch: main
    icon: bi bi-mortarboard
  - name: production
    description: # desc
    uri: sky-lounge/skylounge-library/blueprints/cloudfoundry/bosh/workflow-templates/production.yml
    documentation: # Docs
    branch: main
    icon: bi bi-code-slash
